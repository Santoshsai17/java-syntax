java:
*Integer.toString(--variable--) = converts integer to string

*Integer.toBinaryString(--variable--) =gives binary value


.trim()=removes extra spaces


Arrays.sort(--arrayname--)

int arr[] = {10, 324, 45, 90, 9808};
 int max = Arrays.stream(arr).max().getAsInt();
o/p=max(arr)


Arrays.equals(--array1--,,array2)


char b1[]=b.toCharArray();

a=a.toLowerCase();

Character.isAlphabetic(--char name--);

Integer.parseInt(--string name--); == str->int

Integer.toString(--number--) == int->str


String str[]=s.split("[^a-zA-Z]+");
splits if other than characters ocur


while((scanner--name--).hasNext()):    runs until end of inputs


pattern.compile(----pattern---)
<checks regex patterns>

-----------------------------------------------------------------------
java map:
*Map<--key_datatype--,--value_datatype> --map_name--=new HashMap<>();
*d.put(--key--,--value--);   to add values in hashmap.
*d.containsKey(--key--);    returns whether map contains the particular key or not.

-----------------------------------------------------------------------
java list:(creation)
List<Imteger> --listname--=new LinkedList<>();

adding elements at index in llist:
l.add(inndex , val);

adding elements at end in llist:
l.add(val);


removing elements at index in llist:
l.remove(val);

--------------------------------------
*The Final keyword is a non-access modifier used for classes, attributes and methods, which makes them non-changeable (impossible to inherit or override).

*The final keyword is useful when you want a variable to always store the same value, like PI (3.14159...).

*The final keyword is called a "modifier".

........................................................................

Java Static Initializer Block
hackerrank
